plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.6.20'
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.6.20'
    id 'org.jetbrains.kotlin.plugin.noarg' version '1.6.20'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.20'
}

group 'es.joseluisgs'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.0'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

[compileKotlin, compileTestKotlin].forEach {
    it.kotlinOptions {
        jvmTarget = '1.8'
    }
}

allOpen {
    annotation('javax.persistence.Entity')
    annotation('javax.persistence.Embeddable')
    annotation('javax.persistence.MappedSuperclass')
}

noArg {
    annotation('javax.persistence.Entity')
    annotation('javax.persistence.Embeddable')
    annotation('javax.persistence.MappedSuperclass')
}

dependencies {
    // Hibernate con JPA
    implementation('org.hibernate:hibernate-core:5.6.14.Final')
    // Base de Datos H2 Driver JDBC
    implementation("com.h2database:h2:2.1.214")
    //logging
    implementation('io.github.microutils:kotlin-logging-jvm:3.0.3')
    implementation('ch.qos.logback:logback-classic:1.4.4')
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    //mokito para Kotlin
    implementation("io.mockk:mockk:1.13.2")
    //Terminal
    implementation("com.github.ajalt.mordant:mordant:2.0.0-beta8")
    //SHA-512
    implementation("com.google.guava:guava:31.1-jre")
    // Serializa Json
    implementation('org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1')
    // Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")
}

test {
    useJUnitPlatform()
}